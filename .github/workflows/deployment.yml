name: Deploy

on:
    # Triggers the workflow on push or pull request events but only for the main branch
    push:
        branches: [main, release**]
    pull_request:
        branches: [main, release**]
        # Don't run on draft PR's, see: https://github.com/orgs/community/discussions/25722#discussioncomment-3248917
        types: [opened, synchronize, reopened, ready_for_review]
    # Allows us to run the workflow manually from the Actions tab
    workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  generate-doc-options:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - run: nix build .#docs

      - run: mkdir -p out && cp -r ./result/* out

      - name: Store website
        uses: actions/upload-artifact@v4
        with:
          name: website
          path: ./out

  deploy-docs:
    needs: generate-doc-options
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get nix build output
        uses: actions/download-artifact@v4
        with:
          name: website
          path: './out'

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload GH pages artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: './out'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
